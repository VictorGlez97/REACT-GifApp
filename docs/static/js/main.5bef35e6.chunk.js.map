{"version":3,"sources":["components/AddCategory.js","helpers/GetGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setcategories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACI,0BAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC5CN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAtBgB,SAAEP,GAIxBF,EAAeE,EAAEQ,OAAOF,Y,uBCVnBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAEbC,EAFa,yFAE4EC,UAAWR,GAFvF,sBAGAS,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAIFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAiBZM,GAjBY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,EAAN,OCJCO,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdR,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA2BxC,OApBAC,qBAAU,WAENvB,EAASL,GACJ6B,MAAM,SAAAC,GAMCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAO1B,CAAEzB,IAEE0B,EDpB0BK,CAAc/B,GAAlCkB,EALwB,EAK7BN,KAAaa,EALgB,EAKhBA,QAarB,OACI,oCACI,gCAAOzB,EAAP,KACI,wBAAIqB,UAAU,oCAAd,IAAoDI,GAAW,cAA/D,KACA,yBAAKJ,UAAU,+CAEPH,EAAOJ,KAAK,SAAEC,GAAF,OACR,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UEMtBkB,EAlCM,WAAM,MAGazC,mBAAS,CAAC,oBAHvB,mBAGhB0C,EAHgB,KAGJC,EAHI,KASvB,OAEI,oCACI,gDACA,kBAAC,EAAD,CAAa5C,cAAgB4C,IAC7B,6BAEA,4BAEQD,EAAWpB,KAAK,SAACd,EAAUoC,GAAX,OAEZ,kBAAC,EAAD,CACIJ,IAAMhC,EACNA,SAAWA,U,MCnBvCqC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5bef35e6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    const handleImputChange = ( e ) => {\r\n        //console.log( e )\r\n        //console.log( inputValue )\r\n        //console.log( e.target.value )\r\n        setinputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        //console.log('SUBMIT')\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories( category => [ inputValue, ...category ]); \r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n              type=\"text\"\r\n              value={ inputValue }\r\n              onChange={ handleImputChange }\r\n            />  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=mId3hCGEzvHyg34KCRhYrSwf1dNoQBuI&q=${ encodeURI( category ) }&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    //console.log( data )\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    //console.log( gifs );\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    \r\n    //console.log( id, url, title )\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/GetGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    //const [count, setCount] = useState(0)\r\n    //const [images, setImages] = useState([]);\r\n\r\n    const { data:images, loading } = useFetchGifs( category );    \r\n\r\n    /*useEffect( () => {\r\n        getGifs( category )\r\n            .then( setImages )\r\n    }, [ category ])*/\r\n\r\n    //getGifs();\r\n\r\n    /*const handleCount = () => {\r\n        setCount( count + 1 );\r\n    }*/\r\n    \r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n                <h5 className=\"animate__animated animate__flash\"> { loading && 'Cargando...' } </h5>\r\n                <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                    { \r\n                        images.map( ( img ) => (\r\n                            <GifGridItem \r\n                                key={ img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGif\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                //setTimeout(() => {\r\n                    \r\n                    //console.log( imgs )\r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n                //}, 1500);\r\n\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n    return state; // data [] | loading\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['Capitan Tsubasa', 'Richard Tex-Tex'];\r\n    const [categories, setcategories] = useState(['Capitan Tsubasa'/*, 'Richard Tex-Tex'*/]);\r\n\r\n    /*const handleAdd = () => {    \r\n        setcategories( ['Benji Price', ...categories] );\r\n    }*/\r\n\r\n    return (\r\n\r\n        <>\r\n            <h2> Gif Expert App </h2>\r\n            <AddCategory setCategories={ setcategories } />\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( (category, i) => (\r\n                        //return <li key={ i } > { category } </li>\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    )) \r\n                }\r\n            </ol>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n} \r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n//const GifExpertApp = GifExpertApp();\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}